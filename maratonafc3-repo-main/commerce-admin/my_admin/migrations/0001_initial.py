# Generated by Django 3.0.6 on 2020-06-29 16:43

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('tenant', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='nome')),
                ('email', models.CharField(max_length=255, verbose_name='e-mail')),
                ('personal_document', models.CharField(max_length=20, verbose_name='cpf')),
            ],
            options={
                'verbose_name': 'cliente',
            },
        ),
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(choices=[('credit_card', 'Cartão de crédito'), ('bank_slip', 'Boleto')], max_length=255, verbose_name='nome')),
                ('allow_installments', models.BooleanField(default=True, verbose_name='com parcelamento')),
            ],
            options={
                'verbose_name': 'método de pagamento',
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255, verbose_name='nome')),
                ('billing_cycle', models.CharField(choices=[('6', 'Semestral'), ('12', 'Anual'), ('24', 'Bi-Anual')], max_length=20, verbose_name='ciclo')),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='preço')),
                ('remote_plan_id', models.CharField(help_text='Id do plano no gateway de pagamento', max_length=255, verbose_name='id do plano remoto')),
            ],
            options={
                'verbose_name': 'plano',
            },
        ),
        migrations.CreateModel(
            name='TenantProxy',
            fields=[
            ],
            options={
                'verbose_name': 'loja',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('tenant.tenant',),
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('start_date', models.DateField()),
                ('expires_date', models.DateField()),
                ('remote_subscription_id', models.CharField(max_length=255, verbose_name='id da assinatura no gateway de pagamento')),
                ('tenant', models.ForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.PROTECT, related_name='subscription_tenants', to='tenant.Tenant', verbose_name='tenant')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CustomerAddress',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('zip_code', models.CharField(max_length=15, verbose_name='cep')),
                ('street', models.CharField(max_length=255, verbose_name='endereço')),
                ('street_number', models.CharField(max_length=10, verbose_name='número')),
                ('street_2', models.CharField(max_length=255, null=True, verbose_name='complemento')),
                ('neighborhood', models.CharField(max_length=255, verbose_name='bairro')),
                ('city', models.CharField(max_length=255, verbose_name='cidade')),
                ('state', models.CharField(max_length=255, verbose_name='estado')),
                ('ddd1', models.CharField(max_length=2, verbose_name='ddd')),
                ('phone1', models.CharField(max_length=255, verbose_name='telefone')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='my_admin.Customer')),
            ],
            options={
                'verbose_name': 'endereço',
            },
        ),
        migrations.CreateModel(
            name='Checkout',
            fields=[
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('price', models.DecimalField(decimal_places=2, max_digits=8, verbose_name='preço')),
                ('remote_plan_id', models.CharField(max_length=255)),
                ('status', models.PositiveSmallIntegerField(default=1)),
                ('customer_address', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='my_admin.CustomerAddress', verbose_name='endereço')),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='my_admin.Plan', verbose_name='plano')),
                ('subscription', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, to='my_admin.Subscription')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
